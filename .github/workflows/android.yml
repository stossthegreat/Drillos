name: Android APK Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: 🧹 Clean build artifacts
        run: |
          echo "🔥 Cleaning old builds..."
          rm -rf android/app/src/main/java/io/flutter/plugins || true
          flutter clean

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔍 Debug - Check plugin location
        run: |
          echo "Looking for android_alarm_manager_plus..."
          find "$HOME/.pub-cache/hosted/pub.dev" -type d -name "android_alarm_manager_plus-*" || echo "Not found"
          echo ""
          echo "Listing pub cache contents:"
          ls -la "$HOME/.pub-cache/hosted/pub.dev/" | grep android_alarm || echo "Not in pub cache"

      - name: 🔨 Patch broken plugins (AGGRESSIVE)
        run: |
          chmod +x patch_plugins.sh
          ./patch_plugins.sh
          
      - name: 📋 Verify patch was applied
        run: |
          echo "Checking patched file..."
          PLUGIN_BUILD=$(find "$HOME/.pub-cache/hosted" -path "*/android_alarm_manager_plus-*/android/build.gradle" -print -quit)
          if [ -f "$PLUGIN_BUILD" ]; then
            echo "✅ Found at: $PLUGIN_BUILD"
            echo "Content:"
            cat "$PLUGIN_BUILD"
          else
            echo "❌ Plugin build.gradle not found!"
          fi

      - name: 🧹 Clean Gradle cache
        run: |
          cd android
          ./gradlew clean --no-daemon
          rm -rf .gradle
          rm -rf app/.gradle
          cd ..

      - name: 🔧 Generate local.properties
        run: |
          echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
          echo "sdk.dir=$ANDROID_HOME" >> android/local.properties
          cat android/local.properties

      - name: ✅ Verify Flutter doctor
        run: flutter doctor -v

      - name: 🚀 Build Release APK
        run: |
          flutter build apk --release \
            --no-tree-shake-icons \
            --target-platform android-arm64

      - name: 📤 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error
